package com.example.testmaker.controller;

import java.io.IOException;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.ResourceBundle;

import com.example.testmaker.data.DataBaseAPI;
import javafx.fxml.FXML;
import javafx.scene.control.*;
import javafx.stage.Stage;

public class OpenTestController {

    @FXML
    private ResourceBundle resources;

    @FXML
    private URL location;

    @FXML
    private Button Accept;

    @FXML
    private ComboBox<String> BoxStudent;

    @FXML
    private ComboBox<String> BoxTest;

    @FXML
    private Label LabelStudent;

    @FXML
    private Label LabelTest;

    @FXML
    private RadioButton RBAll;
    private final List<String> students = new ArrayList<>();
    private final List<String> tests = new ArrayList<>();

    @FXML
    void initialize() throws IOException, SQLException {
        assert Accept != null : "fx:id=\"Accept\" was not injected: check your FXML file 'CheckForm.fxml'.";
        assert BoxStudent != null : "fx:id=\"BoxStudent\" was not injected: check your FXML file 'CheckForm.fxml'.";
        assert BoxTest != null : "fx:id=\"BoxTest\" was not injected: check your FXML file 'CheckForm.fxml'.";
        assert LabelStudent != null : "fx:id=\"LabelStudent\" was not injected: check your FXML file 'CheckForm.fxml'.";
        assert LabelTest != null : "fx:id=\"LabelTest\" was not injected: check your FXML file 'CheckForm.fxml'.";
        assert RBAll != null : "fx:id=\"RBAll\" was not injected: check your FXML file 'CheckForm.fxml'.";
        BoxStudent.getItems().add(" ");
        BoxTest.getItems().add(" ");
        BoxTest.getSelectionModel().selectFirst();
        BoxStudent.getSelectionModel().selectFirst();
        fill();
        RBAll.setOnAction(actionEvent -> {
            if (RBAll.isSelected()) {
                BoxStudent.setVisible(false);
                LabelStudent.setVisible(false);
            } else {
                BoxStudent.setVisible(true);
                LabelStudent.setVisible(true);
            }
        });
        Accept.setOnAction(actionEvent -> {
            if (RBAll.isSelected()) {
                try {
                    allStudentAddTest();
                    OtherController.openWindow("Панель админестратора", "AdminForm.fxml", "title.png", Accept);
                    Stage stage = (Stage) Accept.getScene().getWindow();
                    stage.close();
                } catch (IOException | SQLException e) {
                    OtherController.generateAlert("Произошла ошибка", Alert.AlertType.ERROR);
                }

            } else {
                try {
                    addStudentTest(BoxStudent.getSelectionModel().getSelectedItem(), BoxTest.getSelectionModel().getSelectedItem());
                } catch (IOException | SQLException e) {
                    throw new RuntimeException(e);
                }
                OtherController.openWindow("Панель админестратора", "AdminForm.fxml", "title.png", Accept);
                Stage stage = (Stage) Accept.getScene().getWindow();
                stage.close();
            }
        });
    }

    private void fill() throws SQLException, IOException {
        DataBaseAPI db = DataBaseAPI.getDataBase();
        ResultSet set = db.getResultSet("Select username , id From Student");
        while (set.next()) {
            students.add(set.getString(1) + "&" + set.getString(2));
        }
        set = db.getResultSet("Select id from Test");
        while (set.next()) {
            tests.add(set.getString(1));
        }
        set.close();
        db.close();
        for (String s :
                students) {
            BoxStudent.getItems().add(s.split("&")[0]);
        }
        for (String s :
                tests) {
            BoxTest.getItems().add(s);
        }
    }

    private void allStudentAddTest() throws IOException, SQLException {
        DataBaseAPI base = DataBaseAPI.getDataBase();
        StringBuilder tmp = new StringBuilder();
        String id = BoxTest.getSelectionModel().getSelectedItem();
        for (int i = 0; i < students.size(); i++) {
            if (students.size() == 1) {
                tmp.append(students.get(i).split("&")[1]).append(",").append("'").append(id).append("'");
            } else {
                if (i == students.size() - 1) {
                    tmp.append("(").append(students.get(i).split("&")[1]).append(",").append("'").append(id).append("'").append(")");
                } else
                    tmp.append("(").append(students.get(i).split("&")[1]).append(",").append("'").append(id).append("'").append(")").append(",");
            }
        }
        base.addValue("INSERT INTO StudentTest(student_id, test_id) VALUES (" + tmp + ")");
    }

    private String getID(String line, List<String> list) {
        String res = "";
        for (String s : list) {
            if (s.split("&")[0].equals(line)) {
                return s.split("&")[1];
            }
        }
        return res;
    }

    private void addStudentTest(String studentId, String testId) throws IOException, SQLException {
        studentId = getID(studentId, students);
        DataBaseAPI.getDataBase().addValue("INSERT INTO StudentTest(student_id, test_id) value ( " +
                studentId + "," + "'" + testId + "'" + ");");
    }
}
